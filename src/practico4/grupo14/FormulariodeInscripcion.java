/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package practico4.grupo14;
//TURCO

import clases.Alumno;
import clases.Materia;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Candela Naranjo
 */
public class FormulariodeInscripcion extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormulariodeInscripcion
     */
    public FormulariodeInscripcion() {
        initComponents();
        //comboMaterias.addItem("Materia") -> hacerlo en un for a medida que se cargen en la lista materias/alumnos
        cargarMaterias();
        cargarAlumnos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // Cargar materias en el ComboBox
    private void cargarMaterias() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("Seleccione una materia"); // por defecto
        
        if (practico4.listaMaterias.isEmpty()) {
            model.addElement("No hay materias cargadas");
        } else {
            for (Materia materia : practico4.listaMaterias) {
                model.addElement(materia.getIdMateria()+" - "+materia.getNombre());
            }
        }
        
        comboMaterias.setModel(model);
    }
    private void cargarAlumnos(){
        DefaultComboBoxModel<String> model2=new DefaultComboBoxModel<>();
        model2.addElement("Selecciones un alumno");
        if (practico4.listaAlumnos.isEmpty()) {
            model2.addElement("No hay alumnos cargados");
        }else{
            for (Alumno alumno : practico4.listaAlumnos) {
                model2.addElement(alumno.getLegajo()+" - "+alumno.getNombre()+" "+alumno.getApellido());
            }
            
        }
        comboAlumnos.setModel(model2);
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboMaterias = new javax.swing.JComboBox<>();
        comboAlumnos = new javax.swing.JComboBox<>();
        btnInscribir = new javax.swing.JButton();
        btnSalirInscripcion = new javax.swing.JButton();

        setTitle("Formulario Inscripción");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Formulario de Inscripción");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("ElIja una Materia:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Elija un Alumno:");

        comboMaterias.setSelectedIndex(-1);
        comboMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMateriasActionPerformed(evt);
            }
        });

        btnInscribir.setText("Inscribir");
        btnInscribir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnInscribir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInscribirMouseClicked(evt);
            }
        });
        btnInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscribirActionPerformed(evt);
            }
        });

        btnSalirInscripcion.setText("Salir");
        btnSalirInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirInscripcionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnInscribir)
                        .addGap(51, 51, 51)
                        .addComponent(btnSalirInscripcion)))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInscribir)
                    .addComponent(btnSalirInscripcion))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirInscripcionActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirInscripcionActionPerformed

    private void comboMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMateriasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMateriasActionPerformed

    private void btnInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscribirActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnInscribirActionPerformed

    private void btnInscribirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscribirMouseClicked
        if (comboAlumnos.getSelectedIndex()<=0 || comboMaterias.getSelectedIndex()<=0) {
            JOptionPane.showMessageDialog(this, "Debe selecccionar un alumno y una materia", "Error", JOptionPane.ERROR_MESSAGE);
        }
        try{
           
            String alumnoSeleccionado=(String) comboAlumnos.getSelectedItem();
            int legajoAlumno=Integer.parseInt(alumnoSeleccionado.split(" - ")[0]); //Acceder a los valores del combo box hecho como arreglo separado por -
            String materiaSeleccionada=(String) comboMaterias.getSelectedItem();
            int codigoMateria=Integer.parseInt(materiaSeleccionada.split(" - ")[0]);
            
            Alumno alu=null;
            for (Alumno a : practico4.listaAlumnos) {
                if (a.getLegajo()==legajoAlumno) {
                    alu=a;
                    break;
                }
            }
            Materia ma=null;
            boolean inscripto=false;
            for (Materia mate : practico4.listaMaterias) {
                if (mate.getIdMateria()==codigoMateria) {
                ma=mate;
                break;
                }
            }
            if (alu!=null && ma!=null) {
                for (Materia m : alu.getMaterias()) {
                    if (m.getIdMateria()==ma.getIdMateria()) {
                        inscripto=true;
                        break;
                    }
                }
                if (inscripto) {
                    JOptionPane.showMessageDialog(this, "El alumno "+alu.getNombre()+ " "+alu.getApellido()+" ya estaba inscripto a "+ma.getNombre(), "Informacion", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    alu.agregarMateria(ma);
                    JOptionPane.showMessageDialog(this, "El alumno "+alu.getNombre()+" "+alu.getApellido()+" se a inscripto en la materia "+ma.getNombre(), "Exito", JOptionPane.INFORMATION_MESSAGE);
                }
            }
                    // Limpiar seleccion
                    comboMaterias.setSelectedIndex(0);
                    comboAlumnos.setSelectedIndex(0);
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error en procesar la inscripcion ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInscribirMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInscribir;
    private javax.swing.JButton btnSalirInscripcion;
    private javax.swing.JComboBox<String> comboAlumnos;
    private javax.swing.JComboBox<String> comboMaterias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
